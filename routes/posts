const express = require('express')
const router = express.Router()
const Post = require('../models/Post')

//GETS BACK ALL THE POSTS

router.get( '/', async (req, res) => { //does not need to say posts because we used middleware
    try {
        const posts = await Post.find() //returns everything. limit could set it
        res.json(posts)

    } catch (err) {
        res.json({ message: err})
    }
  })
  
//GET SPECIFIC POST
router.get('/:postId', async (req, res) => {
    try {
        const post = await Post.findById(req.params.postId)
        res.json(post)

    } catch (err) {
        res.json({message: err})
    }
})

//DELETE A SPECIFIC POST
router.delete('/:postId', async (req, res) =>{
    try {
        const deletedPost = await Post.deleteOne({ _id: req.params.postId })    
        res.json(deletedPost) //sends back a response with the removed post
    }catch (err) {
        res.json({message: err})
    }
})

  //SUBMITS A POST
  router.post('/', async (req, res) => { //we want to access the information here 
    //getting the data from the post    
    const post = new Post({ //from ../models/Post
            title: req.body.title,
            text: req.body.text
        })

        try {
            const savedPost = await post.save() //sending the post with the data back
            res.json(savedPost)
        } catch(err) {
            res.json({message: err})
        }
  })

//UPDATE a post
router.post('/:postId', async (req, res) => {
    try {
        const updatedPost = await Post.updateOne( 
                                { _id: req.params.postId }, 
                                { $set: {
                                    title: req.body.title,
                                    text: req.body.text
                                    }
                                })
        res.json(updatedPost)

    }catch (err) {
        res.json({message: err})
    }
})



router.get( '/specific', (req, res) => { 
    res.send("We are on specific posts")
})

module.exports = router